pipeline {
    agent any

    environment {
        AWS_CREDENTIALS_ID = 'my-aws-creds'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git(
                    branch: 'main',
                    url: 'https://github.com/Bharathraj5002/Radis.git',
                    credentialsId: 'github-creds'
                )
            }
        }

        stage('Debug Workspace') {
            steps {
                sh 'ls -lR $WORKSPACE'
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: env.AWS_CREDENTIALS_ID,
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    dir('terraform') {
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Confirm Destroy') {
            steps {
                script {
                    input message: '⚠️ Are you sure you want to destroy ALL Terraform resources?', ok: 'Yes, Destroy'
                }
            }
        }

        stage('Terraform Destroy') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: env.AWS_CREDENTIALS_ID,
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    dir('terraform') {
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Destroy pipeline finished.'
        }
        success {
            echo '✅ Terraform destroy successful!'
        }
        failure {
            echo '❌ Terraform destroy failed!'
        }
    }
}
