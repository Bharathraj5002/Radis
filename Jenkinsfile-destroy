pipeline {
    agent any

    environment {
        AWS_CREDENTIALS_ID = 'my-aws-creds'
    }

    stages {
        stage('Terraform Init') {
            steps {
                withCredentials([[ 
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: env.AWS_CREDENTIALS_ID,
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    dir('/var/jenkins_home/workspace/Radis/terraform') {
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            steps {
                withCredentials([[ 
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: env.AWS_CREDENTIALS_ID,
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    dir('/var/jenkins_home/workspace/Radis/terraform') {
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Destroy pipeline finished.'
        }
        success {
            echo 'Terraform resources destroyed successfully!'
        }
        failure {
            echo 'Terraform destroy failed!'
        }
    }
}
